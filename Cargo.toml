[package]
name = "dkn-compute"
version = "0.1.5"
edition = "2021"
license = "Apache-2.0"
readme = "README.md"

# profiling build for flamegraphs
[profile.profiling]
inherits = "release"
debug = true

[features]
default = ["metrics"]
metrics = [
    "dep:tracing-opentelemetry",
    "dep:opentelemetry",
    "dep:opentelemetry-otlp",
    "dep:opentelemetry_sdk",
    "dep:prometheus-client",
    "dep:axum",
    "libp2p/metrics",
]
profiling = []

[dependencies]
tokio-util = { version = "0.7.10", features = ["rt"] }
tokio = { version = "1", features = ["macros", "rt-multi-thread", "signal"] }
parking_lot = "0.12.2"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
async-trait = "0.1.81"
reqwest = "0.12.5"

# utilities
dotenvy = "0.15.7"
base64 = "0.22.0"
hex = "0.4.3"
hex-literal = "0.4.1"
url = "2.5.0"
urlencoding = "2.1.3"
uuid = { version = "1.8.0", features = ["v4"] }
rand = "0.8.5"

# logging
log = "0.4.21"
tracing = { version = "0.1.40" }
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }

# encryption (ecies) & signatures (ecdsa) & hashing & bloom-filters
ecies = { version = "0.2", default-features = false, features = ["pure"] }
libsecp256k1 = "0.7.1"
sha2 = "0.10.8"
sha3 = "0.10.8"
fastbloom-rs = "0.5.9"

# workflows
ollama-workflows = { git = "https://github.com/andthattoo/ollama-workflows", rev = "d6b2e1e" }

# peer-to-peer
libp2p = { git = "https://github.com/anilaltuner/rust-libp2p.git", rev = "be2ed55", features = [
    "dcutr",
    "ping",
    "relay",
    "autonat",
    "identify",
    "tokio",
    "gossipsub",
    "mdns",
    "noise",
    "macros",
    "tcp",
    "yamux",
    "quic",
    "kad",
] }
libp2p-identity = { version = "0.2.9", features = ["secp256k1", "ed25519"] }


# metrics
tracing-opentelemetry = { version = "0.24.0", optional = true }
opentelemetry = { version = "0.23.0", features = ["metrics"], optional = true }
opentelemetry-otlp = { version = "0.16.0", features = [
    "metrics",
], optional = true }
opentelemetry_sdk = { version = "0.23.0", features = [
    "rt-tokio",
    "metrics",
], optional = true }
axum = { version = "0.7", optional = true }
prometheus-client = { version = "0.22.2", optional = true }

[dev-dependencies]
colored = "2.1.0"


[[example]]
name = "ollama"
path = "./examples/benchmarks/ollama.rs"

[[example]]
name = "prompt"


# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
